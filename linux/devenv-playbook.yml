---
- name: Configure development environment
  hosts: localhost
  connection: local
  tasks:
    - name: Administrative setup actions
      become: true
      block: 
        - name: Add Azure CLI key
          apt_key:
            url: https://packages.microsoft.com/keys/microsoft.asc
            #   - name: Add Azure CLI to sources list
            #     apt_repository:
            #       repo: deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_facts['lsb']['codename'] }} main
            #       update_cache: no
        - name: add .netcore key
          apt_key:
            url: https://packages.microsoft.com/keys/microsoft.asc
            state: present
        - name: Add .net to sources list
          apt_repository:
            repo: deb [arch=amd64] https://packages.microsoft.com/ubuntu/{{ ansible_facts['lsb']['release'] }}/prod {{ ansible_facts['lsb']['codename'] }} main
            update_cache: no
        - name: Add Node key
          apt_key:
            url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        - name: Add Node to sources list
          apt_repository:
            repo: '{{item}}'
            filename: nodesource
            update_cache: no
          with_items:
            - deb https://deb.nodesource.com/node_12.x {{ ansible_facts['lsb']['codename'] }} main
            - deb-src https://deb.nodesource.com/node_12.x {{ ansible_facts['lsb']['codename'] }} main
        - name: Add neofetch repository
          apt_repository:
            repo: ppa:dawidd0811/neofetch
            update_cache: no	
        - name: Update apt-cache
          apt:
            update_cache: yes
            cache_valid_time: 3600

        - name: Install packages
          apt:
            name: '{{item}}'
          with_items:
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
            - jq
              #- azure-cli
            - nodejs
            - git
            - zsh
            - neofetch
            - build-essential
            - tmux
            - vim
            - python-pygments
            - cmake
            - zip
            - unzip
            - fonts-powerline
            - docker.io

        - name: Upgrade all packages
          apt:
            upgrade: yes

        - name: Install argcomplete for Azure CLI
          pip:
            name: argcomplete

        - name: Download & extract Go
          unarchive:
            src: https://storage.googleapis.com/golang/go1.13.10.linux-amd64.tar.gz
            dest: /usr/local
            remote_src: yes
            creates: /usr/local/go/bin/go

        - name: Download kubectl
          block:
            - name: Create staging directory for Helkubectlm
              file:
                path: /usr/local/src/kubectl
                state: directory
            - name: Download and extract kubectl
              unarchive:
                src: https://dl.k8s.io/v1.18.2/kubernetes-client-linux-amd64.tar.gz
                dest: /usr/local/src/kubectl
                remote_src: yes
                creates: /usr/local/src/kubectl/kubernetes/client/bin/kubectl
            - name: Copy kubectl to /usr/local/bin
              copy:
                src: /usr/local/src/kubectl/kubernetes/client/bin/kubectl
                dest: /usr/local/bin/kubectl
                remote_src: yes
                force: no
                mode: 0755
        
        - name: Install kubectx
          block:
            - name: Create staging directory for kubectx
              file:
                path: /usr/local/src/kubectx
                state: directory
            - name: Download and extract kubectx
              unarchive:
                src: https://github.com/ahmetb/kubectx/releases/download/v0.9.0/kubectx_v0.9.0_linux_x86_64.tar.gz
                dest: /usr/local/src/kubectx
                remote_src: yes
                creates: /usr/local/src/kubectx/kubectx
            - name: Download and extract kubectx
              unarchive:
                src: https://github.com/ahmetb/kubectx/releases/download/v0.9.0/kubens_v0.9.0_linux_x86_64.tar.gz
                dest: /usr/local/src/kubectx
                remote_src: yes
                creates: /usr/local/src/kubectx/kubens
            - name: Copy tools to /usr/local/bin
              copy:
                src: '/usr/local/src/kubectx/{{item}}'
                dest: '/usr/local/bin/{{item}}'
                remote_src: yes
                mode: 0755
                force: no
              with_items:
                - kubectx
                - kubens

        - name: Install Helm
          block:
            - name: Create staging directory for Helm
              file:
                path: /usr/local/src/helm
                state: directory
            - name: Download and extract Helm
              unarchive:
                src: https://get.helm.sh/helm-v3.2.0-linux-amd64.tar.gz
                dest: /usr/local/src/helm
                remote_src: yes
                creates: /usr/local/src/helm/linux-amd64/helm
            - name: Copy Helm to /usr/local/bin
              copy:
                src: /usr/local/src/helm/linux-amd64/helm
                dest: /usr/local/bin/helm
                remote_src: yes
                force: no
                mode: 0755
                
        - name: Install kind
          block:
            - name: Create staging directory for kind
              file:
                path: /usr/local/src/kind
                state: directory
            - name: Download and extract kind
              get_url:
                url: https://kind.sigs.k8s.io/dl/v0.8.1/kind-linux-amd64
                dest: /usr/local/src/kind
                remote_src: yes
            - name: Copy kind to /usr/local/bin
              copy:
                src: /usr/local/src/kind/kind-linux-amd64
                dest: /usr/local/bin/kind
                remote_src: yes
                force: no
                mode: 0755

        - name: Install kubie
          block:
            - name: Create staging directory for kubie
              file:
                path: /usr/local/src/kubie
                state: directory
            - name: Download and extract kubie
              get_url:
                url: https://github.com/sbstp/kubie/releases/download/v0.9.0/kubie-linux-amd64
                dest: /usr/local/src/kubie
                remote_src: yes
            - name: Copy kind to /usr/local/bin
              copy:
                src: /usr/local/src/kubie/kubie-linux-amd64
                dest: /usr/local/bin/kubie
                remote_src: yes
                force: no
                mode: 0755
            - name: Download and extract kubie
              get_url:
                url: https://raw.githubusercontent.com/sbstp/kubie/master/completion/kubie.bash 
                dest: /usr/local/src/kubie
                remote_src: yes
                
        - name: Install kustomize
          block:
            - name: Create staging directory for kustomize
              file:
                path: /usr/local/src/kustomize
                state: directory
            - name: Download and extract kustomize
              unarchive:
                src: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v3.5.4/kustomize_v3.5.4_linux_amd64.tar.gz
                dest: /usr/local/src/kustomize
                remote_src: yes
                creates: /usr/local/src/kustomize/kustomize
            - name: Copy kustomize to /usr/local/bin
              copy:
                src: /usr/local/src/kustomize/kustomize
                dest: /usr/local/bin/kustomize
                remote_src: yes
                force: no
                mode: 0755

        #if fails to set defualt shell run 'chsh -s $(which zsh)'
        - name: Set Zsh as the default shell
          user:
            name: jstur
            shell: /bin/zsh
            append: yes

    - name: Cloning oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh
        dest: ~/.oh-my-zsh

    - name: Set up devbox repo
      block:
        - name: Clone jsturtevant/devbox
          when: devbox_dev is undefined
          git:
            repo: https://github.com/jsturtevant/devbox
            dest: ~/.devbox
        - name: Use ssh when pushing changes to origin
          shell: |
            if ! git remote -v | grep -q git@github.com; then
              git remote set-url --push origin git@github.com:jsturtevant/devbox.git
            fi
          changed_when: false
          args:
            chdir: ~/.devbox

    - name: Tmux setup
      block:
        - name: Create ~/.tmux/plugins
          file:
            path: ~/.tmux/plugins
            state: directory
        - name: Clone tmux plugin manager
          git:
            repo: https://github.com/tmux-plugins/tpm
            dest: ~/.tmux/plugins/tpm

    - name: Vim setup
      block:
        - name: Create ~/.vim/autoload
          file:
            path: ~/.vim/autoload
            state: directory
        - name: Clone plug.vim
          get_url:
            url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            dest: ~/.vim/autoload/plug.vim
          #- name: Install vim plugins
          #command: vim +PlugInstall +qall
          #changed_when: false

    - name: Link dotfiles
      file:
        state: link
        src: '~/.devbox/dotfiles/{{item}}'
        dest: '~/{{item}}'
      with_items:
        - .gitconfig

    - name: Link Linux-specific dotfiles
      file:
        state: link
        src: '~/.devbox/linux/{{item}}'
        dest: '~/{{item}}'
      with_items:
        - .dircolors
        - .tmux.conf
        - .vimrc
        - .zsh-custom
        - .zshrc

    - name: Update ownership of home folder
      file:
        dest: ~/
        state: directory
        owner: jstur
        group: jstur
        recurse: yes
